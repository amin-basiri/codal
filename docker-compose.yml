version: '3.3'

services:
  mysql-db:
    container_name: mysql-db
    image: mysql:latest # After 8.0.26
    ports:
      - '3306:3306'
    env_file: .env
    volumes:
      - ./db:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  web:
    container_name: web
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ".:/codal"
      - "./modules/requests_html.py:/usr/local/lib/python3.9/site-packages/requests_html.py"
    ports:
      - "80:8000"
    depends_on:
      mysql-db:
        condition: service_healthy
      celery:
        condition: service_started
      celery-beat:
        condition: service_started
      sql-server:
        condition: service_started
    env_file: .env

  redis:
    container_name: redis
    image: bitnami/redis:latest # After 6.0.15
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  celery:
    container_name: celery
    build: .
    command: celery -A codal worker -l info -P solo --logfile=celery.log # Command used to start the Celery worker in the Docker container
    volumes:
      - ".:/codal"
      - "./modules/requests_html.py:/usr/local/lib/python3.9/site-packages/requests_html.py"
    env_file: .env
    depends_on:
      redis:
        condition: service_started
      mysql-db:
        condition: service_healthy

  celery-beat:
    container_name: celery-beat
    build: .
    command: celery -A codal beat -l info
    volumes:
      - ".:/codal"
      - "./modules/requests_html.py:/usr/local/lib/python3.9/site-packages/requests_html.py"
    env_file: .env
    depends_on:
      mysql-db:
        condition: service_healthy
      celery:
        condition: service_started

  sql-server:
    container_name: sql-server
    build:
      dockerfile: SQLDockerFile
      context: .
    env_file: .env
    volumes:
      - "./scripts/:/scripts/"
    ports:
      - "1433:1433"
